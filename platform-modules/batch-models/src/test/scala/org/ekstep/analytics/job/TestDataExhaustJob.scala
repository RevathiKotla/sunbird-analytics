package org.ekstep.analytics.job

import org.ekstep.analytics.framework.JobConfig
import org.ekstep.analytics.framework.Fetcher
import org.ekstep.analytics.framework.Query
import org.ekstep.analytics.framework.Dispatcher
import org.ekstep.analytics.model.SparkSpec
import org.ekstep.analytics.framework.util.JSONUtils
import com.datastax.spark.connector._
import org.ekstep.analytics.framework.util.CommonUtil
import org.joda.time.DateTime
import org.ekstep.analytics.util.Constants
import com.datastax.spark.connector.cql.CassandraConnector
import java.io.File
import org.ekstep.analytics.util.RequestFilter
import org.ekstep.analytics.util.RequestConfig
import org.ekstep.analytics.util.JobRequest
import org.apache.commons.io.FileUtils
import org.ekstep.analytics.framework.conf.AppConf
import java.util.Arrays

class TestDataExhaustJob extends SparkSpec(null) {

    private def preProcess() {
        CassandraConnector(sc.getConf).withSessionDo { session =>
            session.execute("TRUNCATE local_platform_db.job_request");
        }
    }

    private def rmLocalDir(path: String) {
        val dir = new File(path)
        if (dir.exists()) {
            CommonUtil.deleteDirectory(path);
        }
    }
    override def afterAll() {
        CommonUtil.deleteDirectory(AppConf.getConfig("data_exhaust.save_config.prefix"));
        super.afterAll();
    }

     ignore should "execute DataExhaustJob job from local data and won't throw any Exception" in {
    //"DataExhaustJob" should "execute DataExhaustJob job from local data and won't throw any Exception" in {

        preProcess()
        rmLocalDir(AppConf.getConfig("data_exhaust.save_config.prefix"))
        val requests = Array(
            JobRequest("partner1", "test_raw", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2016-11-19", "2016-11-20", Option(List("becb887fe82f24c644482eb30041da6d88bd8150")), Option(List("INTERACT")), None, None))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, None));

        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)
        val config = """{"search":{"type":"local","queries":[{"file":"src/test/resources/data-exhaust/creation-raw/2017-06-22-1498096911578.json"}]},"model":"org.ekstep.analytics.model.DataExhaustJobModel", "parallelization":8,"appName":"Data Exhaust","deviceMapping":false,"modelParams":{}, "exhaustConfig":{"eks-consumption-raw":{"events":["DEFAULT"],"eventConfig":{"DEFAULT":{"eventType":"ConsumptionRaw","searchType":"local","fetchConfig":{"params":{"file":"src/test/resources/data-exhaust/consumption-raw/*"}},"filterMapping":{"tags":{"name":"tags","operator":"IN"}}}}}}}"""
        DataExhaustJob.main(config)(Option(sc));
    }
    
    ignore should "fetch raw events from raw/ prefix" in {
        
        preProcess()
        
        val requests = Array(
            JobRequest("partner1", "test_raw", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2018-04-11", "2018-04-11", None, Option(List("START", "EXDATA")), None, None), Option("eks-consumption-raw"))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, None));
        
        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)
        
        val config = """{"search":{"type":"s3"},"model":"org.ekstep.analytics.model.DataExhaustJobModel","parallelization":8,"appName":"Data Exhaust","deviceMapping":false,"modelParams":{"shouldDelay":false,"delayInMilis":1800000},"exhaustConfig":{"eks-consumption-raw":{"events":["eks-consumption-raw"],"eventConfig":{"eks-consumption-raw":{"searchType":"s3","fetchConfig":{"params":{"bucket":"ekstep-dev-data-store","prefix":"raw/"}},"filterMapping":{"tags":{"name":"tags","operator":"IN"},"channel":{"name":"context.channel","operator":"EQ"},"app_id":{"name":"context.pdata.id","operator":"EQ"}}}}},"eks-consumption-summary":{"events":["ME_SESSION_SUMMARY","ME_CONTENT_USAGE_SUMMARY","ME_GENIE_LAUNCH_SUMMARY","ME_ITEM_SUMMARY","ME_GENIE_USAGE_SUMMARY","ME_ITEM_USAGE_SUMMARY","ME_ASSET_SNAPSHOT_SUMMARY","ME_CONTENT_SNAPSHOT_SUMMARY","ME_DEVICE_USAGE_SUMMARY","ME_GENIE_SESSION_SUMMARY"],"eventConfig":{"ME_SESSION_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"ss/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"edata.eks.timeSpent":{"to":"Time spent on the content"},"edata.eks.screenSummary":{"hidden":true},"edata.eks.currentLevel":{"to":"Current Domain Level"},"edata.eks.syncDate":{"mapFunc":"timestampToDateTime","to":"Sync Date(IST)"},"edata.eks.timeDiff":{"hidden":true},"context.date_range.from":{"hidden":true},"edata.eks.start_time":{"mapFunc":"timestampToDateTime","to":"Content Start Time(IST)"},"uid":{"to":"Genie User ID"},"ets":{"hidden":true},"dimensions.group_user":{"to":"Is Group User"},"edata.eks.activitySummary":{"to":"Activity Summary"},"edata.eks.end_time":{"hidden":true},"edata.eks.eventsSummary":{"hidden":true},"eid":{"hidden":true},"ver":{"hidden":true},"edata.eks.levels":{"hidden":true},"context.pdata.id":{"hidden":true},"edata.eks.itemResponses":{"to":"edata.eks.itemResponses"},"dimensions.gdata.id":{"to":"Content ID"},"edata.eks.noOfLevelTransitions":{"to":"Number of Level Transitions"},"edata.eks.noOfAttempts":{"to":"Number of Attempts"},"tags":{"to":"Genie Tags"},"edata.eks.interruptTime":{"to":"Total interrupt time"},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time stamp(IST)"},"edata.eks.mimeType":{"hidden":true},"edata.eks.telemetryVersion":{"to":"Telemetry Version"},"context.pdata.ver":{"hidden":true},"dimensions.gdata.ver":{"hidden":true},"edata.eks.interactEventsPerMin":{"to":"Number of interactions per minute"},"edata.eks.contentType":{"to":"Content Type"},"context.pdata.model":{"hidden":true},"dimensions.anonymous_user":{"to":"Logged in User"},"dimensions.did":{"to":"Device ID"},"dimensions.loc":{"to":"Lat / Long"},"mid":{"to":"Session ID"},"edata.eks.noOfInteractEvents":{"to":"Number of Interact events in the content session"},"context.date_range.to":{"hidden":true}}}},"ME_CONTENT_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"cus/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_GENIE_LAUNCH_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"gls/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_ITEM_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"is/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_GENIE_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"genie-launch-summ/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"context.date_range.from":{"hidden":true},"uid":{"to":"UIDs"},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation time(IST)"},"edata.eks.total_ts":{"to":"Total time (secs) per tag for the period"},"eid":{"hidden":true},"ver":{"hidden":true},"edata.eks.contents":{"to":"Update col header\tContent IDs of all contents used per tag for the period"},"context.pdata.id":{"hidden":true},"edata.eks.avg_ts_session":{"to":"Average time spent per Genie session"},"edata.eks.device_ids":{"to":"Device IDs per tag for the period"},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"dimensions.tag":{"to":"Tag name"},"edata.eks.total_sessions":{"to":"Total number of sessions per tag for the period"},"mid":{"to":"Unique Genie Session ID"},"context.date_range.to":{"hidden":true},"dimensions.period":{"to":"period"}}}},"ME_ITEM_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"item-usage-summ/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_ASSET_SNAPSHOT_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"asset-snapshot/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"edata.eks.used_activities_count":{"to":"No. of activities that are part of lessons"},"edata.eks.used_templates_count":{"to":"No. of templates that are part of lessons"},"context.date_range.from":{"hidden":true},"uid":{"to":"uid"},"edata.eks.total_questions_count":{"to":"Total number of questions"},"ets":{"mapFunc":"timestampToDateTime","to":"Generation Time(IST)"},"edata.eks.used_audio_count":{"to":"No. of audio files that are being used"},"edata.eks.used_images_count":{"to":"No. of images that are being used"},"edata.eks.used_questions_count":{"to":"No. of questions that are being used"},"edata.eks.total_activities_count":{"to":"Total number of activities"},"eid":{"hidden":true},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"edata.eks.total_templates_count":{"to":"Total no. of templates"},"dimensions.partner_id":{"to":"Partner ID"},"context.pdata.ver":{"hidden":true},"edata.eks.total_images_count":{"to":"Total no. of images"},"context.pdata.model":{"hidden":true},"edata.eks.total_audio_count":{"to":"Total no. of audio files"},"mid":{"hidden":true},"context.date_range.to":{"hidden":true}}}},"ME_CONTENT_SNAPSHOT_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"content-snapshot/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"context.date_range.from":{"hidden":true},"edata.eks.active_user_count":{"to":"No. of active authors on the portal"},"uid":{"to":"uid"},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation time(IST)"},"dimensions.author_id":{"to":"Author ID"},"edata.eks.total_user_count":{"to":"Total number of registered authors on the portal"},"edata.eks.live_content_count":{"to":"Total number of content pieces live"},"eid":{"hidden":true},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"edata.eks.total_content_count":{"to":"Total number of content pieces"},"edata.eks.review_content_count":{"to":"Total number of content pieces pending review"},"dimensions.partner_id":{"to":"Partner ID"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"mid":{"hidden":true},"context.date_range.to":{"hidden":true}}}},"ME_DEVICE_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"dus/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"edata.eks.total_play_time":{"to":"Total Play time on device"},"context.date_range.from":{"hidden":true},"edata.eks.start_time":{"mapFunc":"timestampToDateTime","to":"Time stamp of first Genie installation on device(IST)"},"uid":{"to":"uid"},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation time(IST)"},"edata.eks.avg_num_launches":{"to":"Average num. of Genie launches per day"},"edata.eks.num_contents":{"to":"No. of content pieces available on device"},"edata.eks.play_start_time":{"mapFunc":"timestampToDateTime","to":"Time stamp when the device first started game play(IST)"},"edata.eks.end_time":{"mapFunc":"timestampToDateTime","to":"Time stamp when the device was last used(IST)"},"eid":{"hidden":true},"edata.eks.num_days":{"to":"Number of days since Genie installed before the timestamp indicating the last use"},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"edata.eks.mean_play_time":{"to":"Average play time on device"},"edata.eks.mean_play_time_interval":{"to":"Average time interval between game play on the device"},"edata.eks.last_played_on":{"mapFunc":"timestampToDateTime","to":"Time stamp when the device was last used for game play(IST)"},"edata.eks.avg_time":{"to":"Average time on Genie per day"},"edata.eks.last_played_content":{"to":"Last played content on device"},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"dimensions.did":{"to":"Device ID"},"edata.eks.num_sessions":{"to":"Total number of sessions from the device"},"mid":{"hidden":true},"context.date_range.to":{"hidden":true}}}},"ME_GENIE_SESSION_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"cus/"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"context.date_range.from":{"hidden":true},"edata.eks.content":{"to":"Content IDs of content used in Genie Session"},"edata.eks.timeSpent":{"to":"Time spent on Genie Session\t"},"uid":{"to":"uid"},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation time(IST)"},"dimensions.group_user":{"to":"Is Group user?"},"edata.eks.contentCount":{"to":"Number of content pieces used"},"eid":{"hidden":true},"ver":{"hidden":true},"edata.eks.time_stamp":{"mapFunc":"timestampToDateTime","to":"Session End time stamp(IST)"},"context.pdata.id":{"hidden":true},"tags":{"to":"Genie tags"},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"dimensions.anonymous_user":{"to":"Logged in user?"},"dimensions.did":{"to":"Device ID"},"mid":{"to":"Unique Genie Session ID"},"context.date_range.to":{"hidden":true}}}}}},"eks-consumption-metrics":{"events":["ME_CONTENT_USAGE_METRICS","ME_ITEM_USAGE_METRICS","ME_GENIE_USAGE_METRICS","ME_CONTENT_SNAPSHOT_METRICS","ME_CONCEPT_SNAPSHOT_METRICS","ME_ASSET_SNAPSHOT_METRICS"],"eventConfig":{"ME_CONTENT_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_content_usage_metrics/"}},"filterMapping":{"tags":{"name":"dimensions.tag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":"Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.content_id":{"to":"Content ID"},"dimensions.tag":{"to":"tag"},"edata.eks.m_publish_date":{"to":"Date when the content is published"},"edata.eks.m_total_ts":{"to":"Total time spent"},"edata.eks.m_total_sessions":{"to":"Total number of sessions"},"edata.eks.m_avg_ts_session":{"to":"Average timespent per session"},"edata.eks.m_total_interactions":{"to":"Total interactions count"},"edata.eks.m_avg_interactions_min":{"to":"Average interactions per minute"},"edata.eks.m_total_devices":{"to":"Total number of devices"},"edata.eks.m_avg_sess_device":{"to":"Average sessions per device"}}}},"ME_ITEM_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_item_usage_metrics/"}},"filterMapping":{"tags":{"name":"dimensions.tag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":"Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.tag":{"to":"tag"},"dimensions.content_id":{"to":"Content ID"},"dimensions.item_id":{"to":"item id"},"edata.eks.m_total_ts":{"to":"Total time spent"},"edata.eks.m_total_count":{"to":"Total response count"},"edata.eks.m_correct_res_count":{"to":"Correct response count"},"edata.eks.m_inc_res_count":{"to":"Incorrect response count"},"edata.eks.m_correct_res":{"hidden":true},"edata.eks.m_incorrect_res":{"hidden":true},"edata.eks.m_top5_incorrect_res":{"to":"Top 5 Incorrect response"},"edata.eks.m_avg_ts":{"to":"Average time spent"},"edata.eks.m_top5_misconception_res":{"to":"Top 5 Misconception response"}}}},"ME_GENIE_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_genie_usage_metrics/"}},"filterMapping":{"tags":{"name":"dimensions.tag","operator":"IN"},"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":"Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.tag":{"to":"Device Tag"},"edata.eks.m_total_sessions":{"to":"Total number of sessions"},"edata.eks.m_total_ts":{"to":"Total time spent"},"edata.eks.m_avg_ts_session":{"to":"Average sessions per device"},"edata.eks.m_contents":{"hidden":true},"edata.eks.m_total_devices":{"to":"Total number of devices"}}}},"ME_CONTENT_SNAPSHOT_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_content_snapshot_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}}},"ME_CONCEPT_SNAPSHOT_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_concept_snapshot_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}}},"ME_ASSET_SNAPSHOT_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-consumption-metrics/me_asset_snapshot_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}}}}},"eks-creation-raw":{"events":["eks-creation-raw"],"eventConfig":{"eks-creation-raw":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"raw/"}},"filterMapping":{"channel":{"name":"context.channel","operator":"EQ"},"app_id":{"name":"context.pdata.id","operator":"EQ"}}}}},"eks-creation-summary":{"events":["ME_APP_SESSION_SUMMARY","ME_CE_SESSION_SUMMARY","ME_TEXTBOOK_SESSION_SUMMARY","ME_APP_USAGE_SUMMARY","ME_CE_USAGE_SUMMARY","ME_TEXTBOOK_USAGE_SUMMARY","ME_AUTHOR_USAGE_SUMMARY","ME_PUBLISH_PIPELINE_SUMMARY"],"eventConfig":{"ME_APP_SESSION_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"app-ss/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"edata.eks.interact_events_per_min":{"to":"Average ineractions per minute"},"edata.eks.events_summary":{"to":"edata.eks.events_summary"},"dimensions.app_id":{"to":"Event Source"},"context.date_range.from":{"hidden":true},"edata.eks.start_time":{"mapFunc":"timestampToDateTime","to":"Start Time(IST)"},"uid":{"to":"User ID"},"edata.eks.page_summary":{"to":"Pages visited Summary"},"ets":{"hidden":true},"edata.eks.page_views_count":{"to":"Total pageviews in Session"},"edata.eks.end_time":{"hidden":true},"eid":{"hidden":true},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"edata.eks.ce_visits":{"to":"Number of Authoring tool visits"},"dimensions.sid":{"to":"Session ID"},"edata.eks.time_diff":{"to":"Session length "},"edata.eks.interact_events_count":{"to":"Number of Interactions"},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"edata.eks.time_spent":{"to":"Session length"},"dimensions.anonymous_user":{"to":"User Logged In"},"mid":{"to":"mid"},"edata.eks.env_summary":{"to":"Usage summary"},"edata.eks.first_visit":{"to":"First Time Visitor"},"context.date_range.to":{"hidden":true}}}},"ME_CE_SESSION_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"ce-ss/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_TEXTBOOK_SESSION_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"textbook-ss/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_APP_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"app-usage/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"edata.eks.avg_ts_session":{"to":"Average session duration per day"},"context.granularity":{"to":"Granularity"},"edata.eks.anon_total_sessions":{"to":"Time spent by non-registered users"},"edata.eks.unique_users":{"to":"Unique users list"},"dimensions.app_id":{"to":"Source"},"edata.eks.unique_users_count":{"to":"Unique users count"},"context.date_range.from":{"hidden":true},"edata.eks.total_pageviews_count":{"to":"Total Page Views per day"},"uid":{"to":"uid"},"edata.eks.ce_total_sessions":{"to":"Number of sessions where creation happened"},"edata.eks.anon_avg_ts_session":{"to":"Avg. session duration for non-registered users per day"},"ets":{"mapFunc":"timestampToDateTime","to":"Generation Time(IST)"},"edata.eks.total_ts":{"to":"Total time spent by visitors on Portal"},"edata.eks.ce_percent_sessions":{"to":"Percentage of visitors creating content"},"dimensions.author_id":{"to":"Author ID"},"eid":{"hidden":true},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"edata.eks.new_user_count":{"to":"Number of new users"},"syncts":{"to":"Event sync time(IST)","mapFunc":"timestampToDateTime"},"edata.eks.percent_new_users_count":{"to":"Percentage of new visitors per day"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"edata.eks.avg_pageviews":{"to":"Avg. pages per visit per day"},"edata.eks.total_sessions":{"to":"Total number of sessions"},"edata.eks.anon_total_ts":{"to":"Total time spent by non-registered users on Portal"},"mid":{"hidden":true},"dimensions.period":{"to":"dimensions.period"},"context.date_range.to":{"hidden":true}}}},"ME_CE_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"ce-usage/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_TEXTBOOK_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"textbook-usage/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":false,"columnMappings":{}}},"ME_AUTHOR_USAGE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"author-usage-summary/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"uid":{"to":"Author ID"},"mid":{"hidden":true},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation time(IST)"},"eid":{"hidden":true},"ver":{"hidden":true},"syncts":{"mapFunc":"timestampToDateTime","to":"Sync time(IST)"},"context.pdata.id":{"hidden":true},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"edata.eks.avg_ts_session":{"to":"Total number of seesion per day"},"edata.eks.total_ts":{"to":"Total time spent by author"},"edata.eks.ce_total_ts":{"to":"Total time spent on content editor by author"},"edata.eks.total_sessions":{"to":"No of sessions per Author"},"context.granularity":{"hidden":true},"edata.eks.ce_percent_ts":{"to":"Percentage of time spent browsing vs creating"},"edata.eks.ce_percent_sessions":{"to":"Percentage of sessions in which users log into content editor"},"edata.eks.ce_total_visits":{"to":"No of Content Editor visits per author"},"context.date_range.from":{"hidden":true},"context.date_range.to":{"hidden":true}}}},"ME_PUBLISH_PIPELINE_SUMMARY":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"publish-pipeline-summ/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"context.granularity":{"hidden":true},"context.date_range.from":{"hidden":true},"uid":{"hidden":true},"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"eid":{"hidden":true},"ver":{"hidden":true},"context.pdata.id":{"hidden":true},"edata.eks.publish_pipeline_summary":{"to":"edata.eks.publish_pipeline_summary"},"syncts":{"to":"Event sync time(IST)","mapFunc":"timestampToDateTime"},"context.pdata.ver":{"hidden":true},"context.pdata.model":{"hidden":true},"mid":{"hidden":true},"dimensions.period":{"to":"Date"},"context.date_range.to":{"hidden":true}}}}}},"eks-creation-metrics":{"events":["ME_APP_USAGE_METRICS","ME_CE_USAGE_METRICS","ME_TEXTBOOK_CREATION_METRICS","ME_TEXTBOOK_SNAPSHOT_METRICS","ME_AUTHOR_USAGE_METRICS"],"eventConfig":{"ME_APP_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-creation-metrics/me_app_usage_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":"Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.author_id":{"to":"Author ID / All"},"dimensions.app_id":{"to":"App (EkStep portal currently)"},"edata.eks.anon_total_sessions":{"to":"Total anonymous sessions on portal"},"edata.eks.anon_total_ts":{"to":"Tota time spent (Anonymous) on portal"},"edata.eks.total_sessions":{"to":"Total number of portal sessions"},"edata.eks.total_ts":{"to":"Total time spent on portal"},"edata.eks.ce_total_sessions":{"to":"Total content editor sessions"},"edata.eks.ce_percent_sessions":{"to":"% of total sessions that are content editor sessions"},"edata.eks.total_pageviews_count":{"to":"Total pageviews on portal"},"edata.eks.unique_users":{"hidden":true},"edata.eks.unique_users_count":{"to":"Count of unique users on portal"},"edata.eks.avg_pageviews":{"to":"Avg. number of pageviews per session for specified period"},"edata.eks.avg_ts_session":{"to":"Avg. session length (time spent) per session for specified period"},"edata.eks.anon_avg_ts_session":{"to":"Avg. Anonymous session length (time spent) per session for specified period"},"edata.eks.new_user_count":{"to":"No. of new users on the app (portal) for the given time period"},"edata.eks.percent_new_users_count":{"to":"% of new users for the given time period"}}}},"ME_CE_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-creation-metrics/me_ce_usage_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":"Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.content_id":{"to":"Content ID"},"edata.eks.unique_users_count":{"to":"Number of users who accessed the content piece via the editor"},"edata.eks.total_sessions":{"to":"Total number of sessions that accessed the content piece via the editor"},"edata.eks.total_ts":{"to":"Time spent on the content piece in the content editor"},"edata.eks.avg_ts_session":{"to":"Average session time on the editor"},"edata.eks.update_date":{"to":"Last updated timestamp of the content piece"}}}},"ME_TEXTBOOK_CREATION_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-creation-metrics/me_textbook_creation_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}}},"ME_TEXTBOOK_SNAPSHOT_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-creation-metrics/me_textbook_snapshot_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}}},"ME_AUTHOR_USAGE_METRICS":{"searchType":"s3","fetchConfig":{"params":{"bucket":"'$bucket'","prefix":"eks-creation-metrics/me_author_usage_metrics/"}},"filterMapping":{"channel":{"name":"channel","operator":"EQ"},"app_id":{"name":"dimensions.pdata.id","operator":"EQ"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"ets":{"mapFunc":"timestampToDateTime","to":"Event generation Time(IST)"},"syncts":{"mapFunc":"timestampToDateTime","to":"Event sync time(IST)"},"eid":{"hidden":true},"dimensions.period":{"to":" Time period of the summary. For ex: Day or Week or Month represented by a number"},"dimensions.author_id":{"to":"Author ID /All"},"edata.eks.total_sessions":{"to":"Total number of portal sessions by author"},"edata.eks.total_ts":{"to":"Total time spent on portal by author"},"edata.eks.total_ce_ts":{"to":"Total time spent on content editor by author"},"edata.eks.total_ce_visit":{"to":"Number of content editor visits"},"edata.eks.percent_ce_sessions":{"to":"% of sessions that were spent on the editor"},"edata.eks.avg_ts_session":{"to":"Average time spent by author on portal per session"},"edata.eks.percent_ce_ts":{"to":"% time spent by author on content editor"}}}}}}}}"""
        
        DataExhaustJob.main(config)(Option(sc));
        
        val prefix = AppConf.getConfig("data_exhaust.save_config.prefix")
        val bucket = AppConf.getConfig("data_exhaust.save_config.bucket")
        
//        val keys = S3Util.getAllKeys(bucket, prefix+"/test_raw").toList
//        keys.length should be >(0)
//        keys.contains("_SUCCESS")
        //S3Util.deleteFolder(bucket, prefix+"/test_raw")
    }

    "DataExhaustJob" should "output CSV format" in {
        preProcess()
        rmLocalDir(AppConf.getConfig("data_exhaust.save_config.prefix"))
        val requests = Array(
            JobRequest("partner1", "test_raw", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2016-11-19", "2016-11-20", Option(List("becb887fe82f24c644482eb30041da6d88bd8150")), Option(List("INTERACT")), None, None), output_format = Option("csv"))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, None, Option("DATA_EXHAUST")));

        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)
        val config = """{"search":{"type":"local","queries":[{"file":"src/test/resources/data-exhaust/creation-raw/*"}]},"model":"org.ekstep.analytics.model.DataExhaustJobModel", "parallelization":8,"appName":"Data Exhaust","deviceMapping":false,"modelParams":{},"exhaustConfig":{"eks-consumption-raw":{"events":["DEFAULT"],"eventConfig":{"DEFAULT":{"eventType":"ConsumptionRaw","searchType":"local","fetchConfig":{"params":{"file":"src/test/resources/data-exhaust/consumption-raw/*"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"edata.failedatmpts":{"to":"FAILED_ATTEMPTS"},"edata.dspec.cpu":{"hidden":true},"edata.dspec.os":{"hidden":true}, "ets":{"mapFunc": "timestampToDateTime"},"did":{"hidden":true}}},"filterMapping":{"tags":{"name":"tags","operator":"IN"}}}}}}}"""
        DataExhaustJob.main(config)(Option(sc));
        val lines = scala.io.Source.fromFile("/tmp/data-exhaust/test_raw/DEFAULT/part-00000").getLines()
        val headers = lines.next().split(",")
        //headers.find(h => h == "FAILED_ATTEMPTS") should not be None
        headers.find(h => h == "edata.failedatmpts") shouldBe None
        headers.find(h => h == "edata.dspec.os") shouldBe None
        headers.find(h => h == "did") shouldBe None
    }

    "CSV output value transformation" should "ignore errors in DataExhaustJob" in {
        preProcess()
        rmLocalDir(AppConf.getConfig("data_exhaust.save_config.prefix"))
        val requests = Array(
            JobRequest("partner1", "test_raw", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2016-11-19", "2016-11-20", Option(List("becb887fe82f24c644482eb30041da6d88bd8150")), Option(List("INTERACT")), None, None), output_format = Option("csv"))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, None, Option("DATA_EXHAUST")));

        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)

        // Assigning timestampToDateTime map func to uid which should ignore the errors because UID can't be converted to timestamp
        val configWithIncorrectMapFunc = """{"search":{"type":"local","queries":[{"file":"src/test/resources/data-exhaust/creation-raw/*"}]},"model":"org.ekstep.analytics.model.DataExhaustJobModel","parallelization":8,"appName":"Data Exhaust","deviceMapping":false,"modelParams":{},"exhaustConfig":{"eks-consumption-raw":{"events":["DEFAULT"],"eventConfig":{"DEFAULT":{"eventType":"ConsumptionRaw","searchType":"local","fetchConfig":{"params":{"file":"src/test/resources/data-exhaust/consumption-raw/*"}},"csvConfig":{"auto_extract_column_names":true,"columnMappings":{"edata.failedatmpts":{"to":"FAILED_ATTEMPTS"},"edata.dspec.cpu":{"hidden":true},"edata.dspec.os":{"hidden":true}, "uid":{"mapFunc": "timestampToDateTime"},"did":{"hidden":true}}},"filterMapping":{"tags":{"name":"tags","operator":"IN"}}}}}}}"""
        DataExhaustJob.main(configWithIncorrectMapFunc)(Option(sc));
        val lines = scala.io.Source.fromFile("/tmp/data-exhaust/test_raw/DEFAULT/part-00000").getLines().toArray
        val firstRow = lines(1).replace("\"\"\"", "").split(",")
        firstRow(2) should be("40550853-c88c-4f6b-8d33-88d0f47c32f4")
    }

    it should "test consumption summary data" in {
        preProcess()
        rmLocalDir(AppConf.getConfig("data_exhaust.save_config.prefix"))
        val requests = Array(
            JobRequest("client-key1", "requestID1", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2017-06-18", "2017-06-18", Option(List()), Option(List("ME_SESSION_SUMMARY")), None, None), Option("eks-consumption-summary"))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, Option("DATA_EXHAUST")))

        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)
        val config = """{"search":{"type":"local","queries":[{"file":"src/test/resources/data-exhaust/consumption-summ/*"}]},"model":"org.ekstep.analytics.model.DataExhaustJobModel","parallelization":8,"appName":"Data Exhaust","deviceMapping":false, "modelParams":{}, "exhaustConfig":{"eks-consumption-summary":{"events":["ME_SESSION_SUMMARY"],"eventConfig":{"ME_SESSION_SUMMARY":{"eventType":"Summary","searchType":"local","fetchConfig":{"params":{"file":"src/test/resources/data-exhaust/consumption-summ/*"}},"filterMapping":{"tags":{"name":"genieTag","operator":"IN"}}}}}}}"""

        DataExhaustJob.main(config)(Option(sc));
    }

    it should "test for creation raw data" in {
        preProcess()
        rmLocalDir(AppConf.getConfig("data_exhaust.save_config.prefix"))
        val requests = Array(
            JobRequest("client-key2", "requestID2", None, "SUBMITTED", JSONUtils.serialize(RequestConfig(RequestFilter("2017-06-22", "2017-06-22", None, Option(List("IMPRESSION")), None, None), Option("eks-creation-raw"))),
                None, None, None, None, None, None, DateTime.now(), None, None, None, None, None, None, None, None, None, Option("DATA_EXHAUST")))

        sc.makeRDD(requests).saveToCassandra(Constants.PLATFORM_KEY_SPACE_NAME, Constants.JOB_REQUEST)
        val config = """{"search":{"type":"local","queries":[{"file":"src/test/resources/data-exhaust/creation-raw/*"}]},"model":"org.ekstep.analytics.model.DataExhaustJobModel","parallelization":8,"appName":"Data Exhaust","deviceMapping":false, "modelParams":{}, "exhaustConfig":{"eks-creation-raw":{"events":["DEFAULT"],"eventConfig":{"DEFAULT":{"eventType":"CreationRaw","searchType":"local","fetchConfig":{"params":{"file":"src/test/resources/data-exhaust/creation-raw/*"}},"filterMapping":{"tags":{"name":"tags","operator":"IN"}}}}}}}"""
        CommonUtil.closeSparkContext();
        DataExhaustJob.main(config)(None);
    }

}
